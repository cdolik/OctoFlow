{
  "name": "octoflow",
  "version": "0.1.0",
  "private": true,
  "homepage": "https://cdolik.github.io/OctoFlow",
  "dependencies": {
    "@testing-library/react": "^13.4.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/react-router-dom": "^5.3.3",
    "ajv": "^8.17.1",
    "chart.js": "^4.4.1",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "fork-ts-checker-webpack-plugin": "^9.0.2",
    "helmet": "^7.1.0",
    "ioredis": "^5.3.2",
    "minimatch": "^3.0.5",
    "msw": "^2.7.3",
    "opossum": "^8.1.3",
    "prom-client": "^14.2.0",
    "prop-types": "^15.8.1",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^6.30.0",
    "react-scripts": "^5.0.1",
    "styled-jsx": "^5.1.6",
    "web-vitals": "^2.1.4",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "resolutions": {
    "loader-utils": "2.0.4",
    "minimatch": "3.0.5"
  },
  "overrides": {
    "nth-check": "^2.1.1",
    "postcss": "^8.4.31",
    "semver": "^7.5.4",
    "glob-parent": "^6.0.2",
    "json5": "^2.2.3",
    "loader-utils": "^2.0.4",
    "tough-cookie": "^4.1.3",
    "word-wrap": "^1.2.4",
    "@babel/traverse": "^7.23.2",
    "browserify-sign": "^4.2.2",
    "follow-redirects": "^1.15.4",
    "dns-packet": "^5.6.1",
    "@svgr/webpack": "^8.1.0",
    "webpack": "^5.89.0",
    "webpack-dev-server": "^4.15.1",
    "css-select": "^5.1.0",
    "node-forge": "^1.3.1",
    "terser": "^5.21.0",
    "serialize-javascript": "^6.0.1",
    "shell-quote": "^1.8.1",
    "immer": "^10.0.3"
  },
  "scripts": {
    "preinstall": "npx npm-force-resolutions",
    "predeploy": "npm run build",
    "deploy": "gh-pages -b gh-pages -d build",
    "deploy-mvp": "npm run build && gh-pages -b gh-pages -d build",
    "deploy-mvp-skip-tests": "npm run build && gh-pages -b gh-pages -d build",
    "verify": "npm run typecheck && npm run test && npm run build",
    "verify-mvp": "npm run test:mvp && npm run build",
    "verify-mvp-skip-tests": "npm run build",
    "prestart:dev": "kill-port 3001",
    "start:dev": "NODE_ENV=development ts-node-dev --respawn src/server.ts",
    "start": "NODE_ENV=production node dist/server.js",
    "build": "tsc",
    "build:clean": "rm -rf dist && tsc",
    "test": "jest",
    "test:mvp": "jest --watchAll=false --testPathPattern=\"recommendations|storage\"",
    "test:watch": "jest --watch",
    "test:ci": "jest --watchAll=false --ci --maxWorkers=2 --coverage",
    "eject": "react-scripts eject",
    "typecheck": "tsc --noEmit",
    "lint": "eslint . --ext .ts,.tsx",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "test:unit": "jest --selectProjects unit",
    "test:integration": "jest --selectProjects integration",
    "test:property": "jest --selectProjects property",
    "test:stress": "jest --selectProjects stress",
    "test:e2e": "jest --selectProjects e2e",
    "test:all": "jest --all",
    "test:coverage": "jest --coverage",
    "test:runner": "node scripts/test-runner.js",
    "docker:up": "docker-compose -f monitoring/docker-compose.yml up -d",
    "docker:down": "docker-compose -f monitoring/docker-compose.yml down",
    "docker:logs": "docker-compose -f monitoring/docker-compose.yml logs -f",
    "docker:restart": "docker-compose -f monitoring/docker-compose.yml restart",
    "load-test": "k6 run scripts/load-test.js",
    "security-check": "npm audit && npm outdated"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@axe-core/react": "^4.10.1",
    "@babel/core": "^7.23.9",
    "@babel/preset-env": "^7.23.9",
    "@babel/preset-react": "^7.23.9",
    "@babel/preset-typescript": "^7.23.9",
    "@playwright/test": "^1.50.1",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.15",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react-hooks": "^8.0.1",
    "@testing-library/user-event": "^14.6.1",
    "@types/babel__core": "^7.20.5",
    "@types/babel__generator": "^7.6.8",
    "@types/babel__template": "^7.4.4",
    "@types/babel__traverse": "^7.20.6",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/helmet": "^4.0.0",
    "@types/ioredis": "^5.0.0",
    "@types/jest": "^29.5.12",
    "@types/lodash": "^4.17.15",
    "@types/node": "^20.11.19",
    "@types/react": "^18.2.0",
    "@types/stack-utils": "^2.0.3",
    "@types/supertest": "^6.0.2",
    "@types/testing-library__jest-dom": "^5.14.9",
    "@types/tough-cookie": "^4.0.5",
    "@typescript-eslint/eslint-plugin": "^7.0.1",
    "@typescript-eslint/parser": "^7.0.1",
    "babel-loader": "^9.1.3",
    "customize-cra": "^1.0.0",
    "eslint-import-resolver-typescript": "^3.6.1",
    "fast-check": "^3.23.2",
    "gh-pages": "^6.1.1",
    "history": "^5.3.0",
    "jest": "^29.7.0",
    "jest-canvas-mock": "^2.5.2",
    "jest-environment-jsdom": "^29.7.0",
    "jest-fetch-mock": "^3.0.3",
    "kill-port": "^2.0.1",
    "lodash": "^4.17.21",
    "nodemon": "^3.0.3",
    "npm-force-resolutions": "^0.0.3",
    "react-app-rewired": "^2.2.1",
    "react-refresh": "^0.16.0",
    "react-test-renderer": "^19.0.0",
    "supertest": "^7.0.0",
    "ts-jest": "^29.1.2",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.3.3",
    "yargs": "^17.7.2"
  },
  "jest": {
    "moduleNameMapper": {
      "^.+\\.module\\.(css|sass|scss)$": "identity-obj-proxy",
      "\\.(css|less|scss|sass)$": "identity-obj-proxy"
    },
    "transform": {
      "^.+\\.(js|jsx|ts|tsx)$": [
        "babel-jest",
        {
          "presets": [
            "react-app"
          ]
        }
      ]
    },
    "transformIgnorePatterns": [
      "node_modules/(?!(@testing-library|chart.js|msw|@mswjs|@bundled-es-modules|tough-cookie|web-streams-polyfill|@open-draft|@remix-run)/)"
    ],
    "resetMocks": true
  }
}
