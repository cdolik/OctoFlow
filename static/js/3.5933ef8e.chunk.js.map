{"version":3,"sources":["../node_modules/chart.js/dist/chunks/helpers.segment.mjs","../node_modules/chart.js/dist/chart.mjs","../../src/utils.ts","../../src/chart.tsx","../../src/typedCharts.tsx"],"names":["noop","uid","id","isNullOrUndef","value","isArray","Array","type","Object","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","i","len","keys","length","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","clone$1","source","map","target","create","klen","k","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","v","x","o","y","resolveObjectKey","obj","parts","split","tmp","part","push","_splitKey","_getKeyResolver","_capitalize","str","charAt","toUpperCase","defined","isFunction","setsEqual","a","b","size","item","has","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","p","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","arguments","undefined","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","add","from","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","ticking","_len2","rest","_key2","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","assign","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","m","d","easeInOutBounce","lim","l","h","p2b","n2b","b2n","n2p","map$1","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","c","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","modHSL","ratio","clone","proto","fromObject","input","functionParse","rgbParse","Color","constructor","ret","hexParse","this","_rgb","_valid","rgbString","hslString","mix","color","weight","c1","c2","w2","w1","interpolate","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","getHoverColor","overrides","descriptors","getScope$1","node","root","scope","values","defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","chart","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","get","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","_scriptable","startsWith","_indexable","_fallback","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","Error","join","delete","needsSubResolver","createSubResolver","_resolveScriptable","isIndexable","arr","filter","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","readKey","prefix","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","current","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","slopeDelta","splineCurveMonotone","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","useOffsetPos","shadowRoot","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","getNumberFormat","format","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_ref","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","event","cb","reduce","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","factor","c0","valid","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","_len","_key","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","hidden","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","toPercentage","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","Element","tooltipPosition","useFinalPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","padding","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","position","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_reversePixels","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getPadding","getTicks","xLabels","yLabels","beforeLayout","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","change","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","fullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","_layers","tz","z","gz","getSortedVisibleDatasetMetas","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","_len3","_key3","_len4","_key4","addPlugins","_len5","_key5","addScales","_len6","_key6","getController","_get","getElement","getPlugin","getScale","removeControllers","_len7","_key7","removeElements","_len8","_key8","removePlugins","_len9","_key9","removeScales","_len10","_key10","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","ScatterController","abstract","DateAdapter","chartOptions","formats","timestamp","amount","unit","startOf","weekday","endOf","members","adapters","_date","binarySearch","metaset","lookupMethod","getRange","evaluateInteractionItems","handler","getIntersectItems","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","autoPadding","addBox","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","visibleVerticalBoxCount","updatePos","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","passive","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","_ref2","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","_ref3","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_ref4","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","outerStartX","outerStartY","outerEndX","outerEndY","inner","lineJoin","fullCircles","drawFullCircleBorders","version","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_ref5","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","itemsEqual","plugin_legend","_element","afterEvent","ci","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","_ref6","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","findOrAddLabel","addedLabels","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","_ref7","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","_padding","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","textSize","updateLimits","setCenterPoint","_pointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","hLimits","vLimits","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","reforwardRef","ref","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","ChartComponent","redraw","fallbackContent","updateMode","canvasRef","useRef","chartRef","renderChart","ChartJS","destroyChart","useEffect","nextOptions","role","forwardRef","createTypedChart","registerables","Radar"],"mappings":"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","file":"static/js/3.5933ef8e.chunk.js","sourcesContent":["/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst keyResolvers = {\n  '': v => v,\n  x: o => o.x,\n  y: o => o.y\n};\nfunction resolveObjectKey(obj, key) {\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n  return resolver(obj);\n}\nfunction _getKeyResolver(key) {\n  const keys = _splitKey(key);\n  return obj => {\n    for (const k of keys) {\n      if (k === '') {\n        break;\n      }\n      obj = obj && obj[k];\n    }\n    return obj;\n  };\n}\nfunction _splitKey(key) {\n  const parts = key.split('.');\n  const keys = [];\n  let tmp = '';\n  for (const part of parts) {\n    tmp += part;\n    if (tmp.endsWith('\\\\')) {\n      tmp = tmp.slice(0, -1) + '.';\n    } else {\n      keys.push(tmp);\n      tmp = '';\n    }\n  }\n  return keys;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value, last) =>\n  _lookup(table, value, last\n    ? index => table[index][key] <= value\n    : index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\nfunction _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction _scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nfunction isPatternOrGradient(value) {\n  if (value && typeof value === 'object') {\n    const type = value.toString();\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n  }\n  return false;\n}\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true,\n      includeInvisible: false\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n  let type, xOffset, yOffset, size, cornerRadius, width;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    if (w) {\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n    } else {\n      ctx.arc(x, y, radius, 0, TAU);\n    }\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      width = w ? w / 2 : size;\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n  const {iScale} = meta;\n  const {key = 'r'} = this._parsing;\n  const parsed = new Array(count);\n  let i, ilen, index, item;\n  for (i = 0, ilen = count; i < ilen; ++i) {\n    index = i + start;\n    item = data[index];\n    parsed[i] = {\n      r: iScale.parse(resolveObjectKey(item, key), index)\n    };\n  }\n  return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(e, canvas) {\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  if ('native' in evt) {\n    return evt;\n  }\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _isPointInArea as $, _factorize as A, finiteOrDefault as B, callback as C, _addGrace as D, _limitValue as E, toDegrees as F, _measureText as G, HALF_PI as H, _int16Range as I, _alignPixel as J, toPadding as K, clipArea as L, renderText as M, unclipArea as N, toFont as O, PI as P, each as Q, _toLeftRightCenter as R, _alignStartEnd as S, TAU as T, overrides as U, merge as V, _capitalize as W, getRelativePosition as X, _rlookupByKey as Y, _lookupByKey as Z, _arrayUnique as _, resolve as a, toLineHeight as a$, getAngleFromPoint as a0, getMaximumSize as a1, _getParentNode as a2, readUsedSize as a3, throttled as a4, supportsEventListenerOptions as a5, _isDomSupported as a6, descriptors as a7, isFunction as a8, _attachContext as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, noop as aF, distanceBetweenPoints as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, _longestText as aM, _filterBetween as aN, _lookup as aO, isPatternOrGradient as aP, getHoverColor as aQ, clone$1 as aR, _merger as aS, _mergerIf as aT, _deprecated as aU, _splitKey as aV, toFontString as aW, splineCurve as aX, splineCurveMonotone as aY, getStyle as aZ, fontString as a_, _createResolver as aa, _descriptors as ab, mergeIf as ac, uid as ad, debounce as ae, retinaScale as af, clearCanvas as ag, setsEqual as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, PITAU as b0, INFINITY as b1, RAD_PER_DEG as b2, QUARTER_PI as b3, TWO_THIRDS_PI as b4, _angleDiff as b5, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, log10 as z };\n","/*!\n * Chart.js v3.9.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as log10, A as _factorize, B as finiteOrDefault, C as callback, D as _addGrace, E as _limitValue, F as toDegrees, G as _measureText, I as _int16Range, J as _alignPixel, K as toPadding, L as clipArea, M as renderText, N as unclipArea, O as toFont, Q as each, R as _toLeftRightCenter, S as _alignStartEnd, U as overrides, V as merge, W as _capitalize, X as getRelativePosition, Y as _rlookupByKey, Z as _lookupByKey, $ as _isPointInArea, a0 as getAngleFromPoint, a1 as getMaximumSize, a2 as _getParentNode, a3 as readUsedSize, a4 as throttled, a5 as supportsEventListenerOptions, a6 as _isDomSupported, a7 as descriptors, a8 as isFunction, a9 as _attachContext, aa as _createResolver, ab as _descriptors, ac as mergeIf, ad as uid, ae as debounce, af as retinaScale, ag as clearCanvas, ah as setsEqual, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as noop, aG as distanceBetweenPoints, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as _longestText, aN as _filterBetween, aO as _lookup } from './chunks/helpers.segment.mjs';\nexport { d as defaults } from './chunks/helpers.segment.mjs';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const skipNull = (meta) => {\n      const parsed = meta.controller.getParsed(dataIndex);\n      const val = parsed && parsed[meta.vScale.axis];\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n    return range;\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndex.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n      if (isHorizontal) {\n        x = pixel;\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign: tickTextAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass ScatterController extends DatasetController {\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    if (this.options.showLine) {\n      const {dataset: line, _dataset} = meta;\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    this.updateElements(points, start, count, mode);\n  }\n  addElements() {\n    const {showLine} = this.options;\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = registry.getElement('line');\n    }\n    super.addElements();\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  init(chartOptions) {}\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  evaluateInteractionItems,\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n  return {plugins, localIds};\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.9.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  if (circular) {\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle, circular) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle, circular);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n  return target;\n}\nfunction _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\nfunction _getTargetValue(fill, scale, startValue) {\n  let value;\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n\nfunction _getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return _createBoundaryLine(boundary, line);\n}\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n  if (isNumberFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n  return null;\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : (labelColors.borderWidth || 1);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  _willRender() {\n    return !!this.opacity;\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      const backdropLeft = left - padding.left;\n      const backdropTop = top - padding.top;\n      const backdropWidth = right - left + padding.width;\n      const backdropHeight = bottom - top + padding.height;\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: backdropLeft,\n          y: backdropTop,\n          w: backdropWidth,\n          h: backdropHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n      }\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    adapter.init(opts);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  afterAutoSkip() {\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","import type { MouseEvent } from 'react';\nimport type {\n  ChartType,\n  ChartData,\n  DefaultDataPoint,\n  ChartDataset,\n  ChartOptions,\n  Chart,\n} from 'chart.js';\n\nimport type { ForwardedRef } from './types';\n\nconst defaultDatasetIdKey = 'label';\n\nexport function reforwardRef<T>(ref: ForwardedRef<T>, value: T) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}\n\nexport function setOptions<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(chart: Chart<TType, TData, TLabel>, nextOptions: ChartOptions<TType>) {\n  Object.assign(chart.options, nextOptions);\n}\n\nexport function setLabels<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextLabels: TLabel[] | undefined\n) {\n  currentData.labels = nextLabels;\n}\n\nexport function setDatasets<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  currentData: ChartData<TType, TData, TLabel>,\n  nextDatasets: ChartDataset<TType, TData>[],\n  datasetIdKey = defaultDatasetIdKey\n) {\n  const addedDatasets: ChartDataset<TType, TData>[] = [];\n\n  currentData.datasets = nextDatasets.map(\n    (nextDataset: Record<string, unknown>) => {\n      // given the new set, find it's current match\n      const currentDataset = currentData.datasets.find(\n        (dataset: Record<string, unknown>) =>\n          dataset[datasetIdKey] === nextDataset[datasetIdKey]\n      );\n\n      // There is no original to update, so simply add new one\n      if (\n        !currentDataset ||\n        !nextDataset.data ||\n        addedDatasets.includes(currentDataset)\n      ) {\n        return { ...nextDataset } as ChartDataset<TType, TData>;\n      }\n\n      addedDatasets.push(currentDataset);\n\n      Object.assign(currentDataset, nextDataset);\n\n      return currentDataset;\n    }\n  );\n}\n\nexport function cloneData<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(data: ChartData<TType, TData, TLabel>, datasetIdKey = defaultDatasetIdKey) {\n  const nextData: ChartData<TType, TData, TLabel> = {\n    labels: [],\n    datasets: [],\n  };\n\n  setLabels(nextData, data.labels);\n  setDatasets(nextData, data.datasets, datasetIdKey);\n\n  return nextData;\n}\n\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getDatasetAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'dataset',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'nearest',\n    { intersect: true },\n    false\n  );\n}\n\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */\nexport function getElementsAtEvent(\n  chart: Chart,\n  event: MouseEvent<HTMLCanvasElement>\n) {\n  return chart.getElementsAtEventForMode(\n    event.nativeEvent,\n    'index',\n    { intersect: true },\n    false\n  );\n}\n","import React, { useEffect, useRef, forwardRef } from 'react';\nimport { Chart as ChartJS } from 'chart.js';\nimport type { ChartType, DefaultDataPoint } from 'chart.js';\n\nimport type { ForwardedRef, ChartProps, TypedChartComponent } from './types';\nimport {\n  reforwardRef,\n  cloneData,\n  setOptions,\n  setLabels,\n  setDatasets,\n} from './utils';\n\nfunction ChartComponent<\n  TType extends ChartType = ChartType,\n  TData = DefaultDataPoint<TType>,\n  TLabel = unknown\n>(\n  {\n    height = 150,\n    width = 300,\n    redraw = false,\n    datasetIdKey,\n    type,\n    data,\n    options,\n    plugins = [],\n    fallbackContent,\n    updateMode,\n    ...props\n  }: ChartProps<TType, TData, TLabel>,\n  ref: ForwardedRef<ChartJS<TType, TData, TLabel>>\n) {\n  type TypedChartJS = ChartJS<TType, TData, TLabel>;\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const chartRef = useRef<TypedChartJS | null>();\n\n  const renderChart = () => {\n    if (!canvasRef.current) return;\n\n    chartRef.current = new ChartJS(canvasRef.current, {\n      type,\n      data: cloneData(data, datasetIdKey),\n      options: options && { ...options },\n      plugins,\n    });\n\n    reforwardRef(ref, chartRef.current);\n  };\n\n  const destroyChart = () => {\n    reforwardRef(ref, null);\n\n    if (chartRef.current) {\n      chartRef.current.destroy();\n      chartRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && options) {\n      setOptions(chartRef.current, options);\n    }\n  }, [redraw, options]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current) {\n      setLabels(chartRef.current.config.data, data.labels);\n    }\n  }, [redraw, data.labels]);\n\n  useEffect(() => {\n    if (!redraw && chartRef.current && data.datasets) {\n      setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n    }\n  }, [redraw, data.datasets]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    if (redraw) {\n      destroyChart();\n      setTimeout(renderChart);\n    } else {\n      chartRef.current.update(updateMode);\n    }\n  }, [redraw, options, data.labels, data.datasets, updateMode]);\n\n  useEffect(() => {\n    if (!chartRef.current) return;\n\n    destroyChart();\n    setTimeout(renderChart);\n  }, [type]);\n\n  useEffect(() => {\n    renderChart();\n\n    return () => destroyChart();\n  }, []);\n\n  return (\n    <canvas ref={canvasRef} role='img' height={height} width={width} {...props}>\n      {fallbackContent}\n    </canvas>\n  );\n}\n\nexport const Chart = forwardRef(ChartComponent) as TypedChartComponent;\n","import React, { forwardRef } from 'react';\nimport {\n  Chart as ChartJS,\n  LineController,\n  BarController,\n  RadarController,\n  DoughnutController,\n  PolarAreaController,\n  BubbleController,\n  PieController,\n  ScatterController,\n} from 'chart.js';\nimport type { ChartType, ChartComponentLike } from 'chart.js';\n\nimport type {\n  ChartProps,\n  ChartJSOrUndefined,\n  TypedChartComponent,\n} from './types';\nimport { Chart } from './chart';\n\nfunction createTypedChart<T extends ChartType>(\n  type: T,\n  registerables: ChartComponentLike\n) {\n  ChartJS.register(registerables);\n\n  return forwardRef<ChartJSOrUndefined<T>, Omit<ChartProps<T>, 'type'>>(\n    (props, ref) => <Chart {...props} ref={ref} type={type} />\n  ) as TypedChartComponent<T, true>;\n}\n\nexport const Line = /* #__PURE__ */ createTypedChart('line', LineController);\n\nexport const Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\n\nexport const Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\n\nexport const Doughnut = /* #__PURE__ */ createTypedChart(\n  'doughnut',\n  DoughnutController\n);\n\nexport const PolarArea = /* #__PURE__ */ createTypedChart(\n  'polarArea',\n  PolarAreaController\n);\n\nexport const Bubble = /* #__PURE__ */ createTypedChart(\n  'bubble',\n  BubbleController\n);\n\nexport const Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\n\nexport const Scatter = /* #__PURE__ */ createTypedChart(\n  'scatter',\n  ScatterController\n);\n"],"sourceRoot":""}