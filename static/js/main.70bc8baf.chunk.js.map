{"version":3,"sources":["data/questions.ts","components/StageSelector.tsx","components/AssessmentFlow.tsx","components/ResultsDashboard.tsx","components/FeedbackForm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Category","StartupStage","questions","Seed","id","text","category","Collaboration","tooltipText","githubDocsUrl","Automation","Security","Documentation","Testing","Compliance","SeriesA","SeriesB","StageSelector","_ref","onSelectStage","React","createElement","className","onClick","AssessmentFlow","stage","onComplete","onBack","currentQuestionIndex","setCurrentQuestionIndex","useState","responses","setResponses","tooltipVisible","setTooltipVisible","stageQuestions","currentQuestion","progress","length","useEffect","savedResponses","sessionStorage","getItem","JSON","parse","e","console","error","Object","keys","setItem","stringify","handleResponse","score","updatedResponses","style","width","toggleTooltip","href","target","rel","handlePrevious","RadarChart","lazy","ResultsDashboard","onReset","categoryScores","setCategoryScores","recommendations","setRecommendations","isChartLoaded","setIsChartLoaded","scores","categoryCounts","total","count","forEach","question","result","categoryKey","calculateCategoryScores","newRecommendations","push","docsUrl","priority","sort","a","b","priorityOrder","high","medium","low","setTimeout","renderChartPlaceholder","Suspense","fallback","entries","map","_ref2","key","toFixed","rec","index","FeedbackForm","role","aria-label","AppState","App","appState","setAppState","StageSelection","selectedStage","setSelectedStage","savedState","savedStage","parseInt","toString","Assessment","assessmentResponses","Results","handleBack","Fragment","handleReset","removeItem","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.70bc8baf.chunk.js","sourcesContent":["// Types for assessment questions\nexport interface Question {\n  id: string;\n  text: string;\n  category: Category;\n  tooltipText: string;\n  githubDocsUrl: string;\n}\n\nexport enum Category {\n  Security = \"Security\",\n  Collaboration = \"Collaboration\",\n  Automation = \"Automation\",\n  Compliance = \"Compliance\",\n  Testing = \"Testing\",\n  Documentation = \"Documentation\"\n}\n\nexport enum StartupStage {\n  Seed = \"Seed/Earlier\",\n  SeriesA = \"Series A\",\n  SeriesB = \"Series B+\"\n}\n\n// Sample questions for each startup stage\nexport const questions: Record<StartupStage, Question[]> = {\n  [StartupStage.Seed]: [\n    {\n      id: \"seed-1\",\n      text: \"Do you have a consistent branch strategy (e.g. git-flow, GitHub flow)?\",\n      category: Category.Collaboration,\n      tooltipText: \"A defined workflow helps teams collaborate on code changes efficiently.\",\n      githubDocsUrl: \"https://docs.github.com/en/get-started/quickstart/github-flow\"\n    },\n    {\n      id: \"seed-2\",\n      text: \"Are you using pull requests for code reviews?\",\n      category: Category.Collaboration,\n      tooltipText: \"Pull requests facilitate team review of code changes before merging.\",\n      githubDocsUrl: \"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests\"\n    },\n    {\n      id: \"seed-3\",\n      text: \"Do you have a CI/CD pipeline set up with GitHub Actions?\",\n      category: Category.Automation,\n      tooltipText: \"Automating your build, test, and deployment processes saves time and reduces errors.\",\n      githubDocsUrl: \"https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions\"\n    },\n    {\n      id: \"seed-4\",\n      text: \"Are you using Dependabot to manage package dependencies?\",\n      category: Category.Security,\n      tooltipText: \"Dependabot can automatically update dependencies with security vulnerabilities.\",\n      githubDocsUrl: \"https://docs.github.com/en/code-security/dependabot/dependabot-version-updates/about-dependabot-version-updates\"\n    },\n    {\n      id: \"seed-5\",\n      text: \"Do you have a well-structured README file?\",\n      category: Category.Documentation,\n      tooltipText: \"A good README helps new team members onboard quickly.\",\n      githubDocsUrl: \"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-readmes\"\n    },\n    {\n      id: \"seed-6\",\n      text: \"Are you writing automated tests for your code?\",\n      category: Category.Testing,\n      tooltipText: \"Automated tests help catch bugs early and provide confidence when making changes.\",\n      githubDocsUrl: \"https://docs.github.com/en/actions/automating-builds-and-tests/about-continuous-integration\"\n    },\n    {\n      id: \"seed-7\",\n      text: \"Are your repository secrets stored securely?\",\n      category: Category.Security,\n      tooltipText: \"GitHub offers secure storage for sensitive values like API keys.\",\n      githubDocsUrl: \"https://docs.github.com/en/actions/security-guides/encrypted-secrets\"\n    },\n    {\n      id: \"seed-8\",\n      text: \"Do you have branch protection rules for your main branch?\",\n      category: Category.Security,\n      tooltipText: \"Branch protection prevents direct pushes and ensures code reviews.\",\n      githubDocsUrl: \"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches\"\n    },\n    {\n      id: \"seed-9\",\n      text: \"Are you using GitHub Issues to track bugs and feature requests?\",\n      category: Category.Collaboration,\n      tooltipText: \"Issues help organize work and track progress.\",\n      githubDocsUrl: \"https://docs.github.com/en/issues/tracking-your-work-with-issues/about-issues\"\n    },\n    {\n      id: \"seed-10\",\n      text: \"Do you have a license file in your repository?\",\n      category: Category.Compliance,\n      tooltipText: \"A license clarifies how others can use your code.\",\n      githubDocsUrl: \"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/licensing-a-repository\"\n    }\n  ],\n  [StartupStage.SeriesA]: [\n    {\n      id: \"series-a-1\",\n      text: \"Do you enforce code quality standards via CI?\",\n      category: Category.Automation,\n      tooltipText: \"Automated code quality checks maintain consistency across your codebase.\",\n      githubDocsUrl: \"https://docs.github.com/en/github/finding-security-vulnerabilities-and-errors-in-your-code/about-code-scanning\"\n    },\n    {\n      id: \"series-a-2\",\n      text: \"Are you using GitHub's code scanning features?\",\n      category: Category.Security,\n      tooltipText: \"Code scanning can identify vulnerabilities before they reach production.\",\n      githubDocsUrl: \"https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning\"\n    },\n    {\n      id: \"series-a-3\",\n      text: \"Do you have a defined process for dependency management?\",\n      category: Category.Security,\n      tooltipText: \"Regular dependency updates reduce security risks.\",\n      githubDocsUrl: \"https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-supply-chain-security\"\n    },\n    {\n      id: \"series-a-4\",\n      text: \"Are you using GitHub Projects for tracking development workflows?\",\n      category: Category.Collaboration,\n      tooltipText: \"GitHub Projects provides Kanban-style boards for workflow management.\",\n      githubDocsUrl: \"https://docs.github.com/en/issues/planning-and-tracking-with-projects/learning-about-projects/about-projects\"\n    },\n    {\n      id: \"series-a-5\",\n      text: \"Do you have a documented incident response process?\",\n      category: Category.Security,\n      tooltipText: \"A clear plan for handling security incidents minimizes impact.\",\n      githubDocsUrl: \"https://docs.github.com/en/code-security/security-advisories/about-coordinated-disclosure-of-security-vulnerabilities\"\n    },\n    {\n      id: \"series-a-6\",\n      text: \"Are you tracking code coverage for your tests?\",\n      category: Category.Testing,\n      tooltipText: \"Code coverage helps identify untested parts of your application.\",\n      githubDocsUrl: \"https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven#caching-dependencies\"\n    },\n    {\n      id: \"series-a-7\",\n      text: \"Do you have environment-specific deployment workflows?\",\n      category: Category.Automation,\n      tooltipText: \"Separate workflows for staging and production improve reliability.\",\n      githubDocsUrl: \"https://docs.github.com/en/actions/deployment/about-deployments\"\n    },\n    {\n      id: \"series-a-8\",\n      text: \"Are you performing regular dependency audits?\",\n      category: Category.Security,\n      tooltipText: \"Regular audits catch vulnerable dependencies early.\",\n      githubDocsUrl: \"https://docs.github.com/en/code-security/dependabot/working-with-dependabot/auditing-dependabot-alerts\"\n    },\n    {\n      id: \"series-a-9\",\n      text: \"Do you have a contributor guide for your repositories?\",\n      category: Category.Documentation,\n      tooltipText: \"Guidance for contributors helps maintain code quality and consistency.\",\n      githubDocsUrl: \"https://docs.github.com/en/communities/setting-up-your-project-for-healthy-contributions/setting-guidelines-for-repository-contributors\"\n    },\n    {\n      id: \"series-a-10\",\n      text: \"Are you using GitHub's security advisories feature?\",\n      category: Category.Security,\n      tooltipText: \"Security advisories help you privately discuss and fix vulnerabilities.\",\n      githubDocsUrl: \"https://docs.github.com/en/code-security/security-advisories/about-github-security-advisories\"\n    }\n  ],\n  [StartupStage.SeriesB]: [\n    {\n      id: \"series-b-1\",\n      text: \"Do you enforce SAML SSO for your GitHub organization?\",\n      category: Category.Security,\n      tooltipText: \"SAML SSO provides centralized authentication for organization access.\",\n      githubDocsUrl: \"https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-saml-single-sign-on-for-your-organization/about-identity-and-access-management-with-saml-single-sign-on\"\n    },\n    {\n      id: \"series-b-2\",\n      text: \"Are you using GitHub Advanced Security features?\",\n      category: Category.Security,\n      tooltipText: \"Advanced Security provides additional security features like secret scanning.\",\n      githubDocsUrl: \"https://docs.github.com/en/get-started/learning-about-github/about-github-advanced-security\"\n    },\n    {\n      id: \"series-b-3\",\n      text: \"Do you have defined SLAs for security vulnerability remediation?\",\n      category: Category.Security,\n      tooltipText: \"SLAs ensure timely responses to security issues.\",\n      githubDocsUrl: \"https://docs.github.com/en/code-security/security-advisories/about-github-security-advisories\"\n    },\n    {\n      id: \"series-b-4\",\n      text: \"Are you using GitHub's audit log for compliance monitoring?\",\n      category: Category.Compliance,\n      tooltipText: \"Audit logs provide visibility into organization activity.\",\n      githubDocsUrl: \"https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization\"\n    },\n    {\n      id: \"series-b-5\",\n      text: \"Do you enforce signed commits?\",\n      category: Category.Security,\n      tooltipText: \"Signed commits verify the identity of the contributor.\",\n      githubDocsUrl: \"https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification\"\n    },\n    {\n      id: \"series-b-6\",\n      text: \"Are you using GitHub's security policies feature?\",\n      category: Category.Security,\n      tooltipText: \"Security policies help others understand how to report vulnerabilities.\",\n      githubDocsUrl: \"https://docs.github.com/en/code-security/getting-started/adding-a-security-policy-to-your-repository\"\n    },\n    {\n      id: \"series-b-7\",\n      text: \"Do you have an automated dependency approval process?\",\n      category: Category.Automation,\n      tooltipText: \"Automating dependency approvals speeds up secure development.\",\n      githubDocsUrl: \"https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-dependency-review\"\n    },\n    {\n      id: \"series-b-8\",\n      text: \"Are you using GitHub's required status checks?\",\n      category: Category.Compliance,\n      tooltipText: \"Required status checks enforce quality standards before merging.\",\n      githubDocsUrl: \"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches#require-status-checks-before-merging\"\n    },\n    {\n      id: \"series-b-9\",\n      text: \"Do you have a documented compliance framework for your codebase?\",\n      category: Category.Compliance,\n      tooltipText: \"Documentation helps ensure regulatory compliance across your team.\",\n      githubDocsUrl: \"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-repository-languages\"\n    },\n    {\n      id: \"series-b-10\",\n      text: \"Are you using GitHub's CODEOWNERS feature?\",\n      category: Category.Collaboration,\n      tooltipText: \"CODEOWNERS automatically assigns reviewers based on file paths.\",\n      githubDocsUrl: \"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners\"\n    }\n  ]\n};\n\n// Helper function to calculate score from 1-4 for a given question\nexport const calculateCategoryScores = (responses: Record<string, number>): Record<Category, number> => {\n  const categoryCounts: Record<Category, { total: number; count: number }> = {\n    [Category.Security]: { total: 0, count: 0 },\n    [Category.Collaboration]: { total: 0, count: 0 },\n    [Category.Automation]: { total: 0, count: 0 },\n    [Category.Compliance]: { total: 0, count: 0 },\n    [Category.Testing]: { total: 0, count: 0 },\n    [Category.Documentation]: { total: 0, count: 0 }\n  };\n  \n  // Flatten all questions into a single array\n  const allQuestions = [\n    ...questions[StartupStage.Seed],\n    ...questions[StartupStage.SeriesA],\n    ...questions[StartupStage.SeriesB]\n  ];\n  \n  // Sum up scores by category\n  allQuestions.forEach(question => {\n    if (responses[question.id]) {\n      categoryCounts[question.category].total += responses[question.id];\n      categoryCounts[question.category].count += 1;\n    }\n  });\n  \n  // Calculate average score per category (defaulting to 0 if no questions answered)\n  const result: Record<Category, number> = {} as Record<Category, number>;\n  \n  Object.keys(categoryCounts).forEach(category => {\n    const categoryKey = category as Category;\n    const { total, count } = categoryCounts[categoryKey];\n    result[categoryKey] = count > 0 ? total / count : 0;\n  });\n  \n  return result;\n}; ","import React from 'react';\nimport { StartupStage } from '../data/questions';\n\ninterface StageSelectorProps {\n  onSelectStage: (stage: StartupStage) => void;\n}\n\nconst StageSelector: React.FC<StageSelectorProps> = ({ onSelectStage }) => {\n  return (\n    <div className=\"stage-selector\">\n      <h1>Welcome to OctoFlow</h1>\n      <p className=\"description\">\n        Select your startup stage to begin the GitHub practices assessment:\n      </p>\n      \n      <div className=\"stage-options\">\n        <div className=\"stage-card\" onClick={() => onSelectStage(StartupStage.Seed)}>\n          <h2>Seed / Earlier</h2>\n          <p>Focus on foundational GitHub workflows, basic version control, and team collaboration.</p>\n        </div>\n        \n        <div className=\"stage-card\" onClick={() => onSelectStage(StartupStage.SeriesA)}>\n          <h2>Series A</h2>\n          <p>Emphasis on scaling practices, code quality, security, and enhanced collaboration techniques.</p>\n        </div>\n        \n        <div className=\"stage-card\" onClick={() => onSelectStage(StartupStage.SeriesB)}>\n          <h2>Series B+</h2>\n          <p>Advanced security, compliance, and scalability for growing engineering organizations.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StageSelector; ","import React, { useState, useEffect } from 'react';\nimport { StartupStage, questions } from '../data/questions';\n\ninterface AssessmentFlowProps {\n  stage: StartupStage;\n  onComplete: (responses: Record<string, number>) => void;\n  onBack: () => void;\n}\n\nconst AssessmentFlow: React.FC<AssessmentFlowProps> = ({ stage, onComplete, onBack }) => {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState<Record<string, number>>({});\n  const [tooltipVisible, setTooltipVisible] = useState(false);\n  \n  const stageQuestions = questions[stage];\n  const currentQuestion = stageQuestions[currentQuestionIndex];\n  const progress = ((currentQuestionIndex + 1) / stageQuestions.length) * 100;\n  \n  // Load saved responses from sessionStorage if available\n  useEffect(() => {\n    const savedResponses = sessionStorage.getItem(`octoflow-responses-${stage}`);\n    if (savedResponses) {\n      try {\n        setResponses(JSON.parse(savedResponses));\n      } catch (e) {\n        console.error('Failed to parse saved responses', e);\n      }\n    }\n  }, [stage]);\n  \n  // Save responses to sessionStorage when they change\n  useEffect(() => {\n    if (Object.keys(responses).length > 0) {\n      sessionStorage.setItem(`octoflow-responses-${stage}`, JSON.stringify(responses));\n    }\n  }, [responses, stage]);\n  \n  const handleResponse = (score: number) => {\n    const updatedResponses = { ...responses, [currentQuestion.id]: score };\n    setResponses(updatedResponses);\n    \n    if (currentQuestionIndex < stageQuestions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      // Completed all questions\n      onComplete(updatedResponses);\n    }\n  };\n  \n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(currentQuestionIndex - 1);\n    } else {\n      onBack();\n    }\n  };\n  \n  const toggleTooltip = () => {\n    setTooltipVisible(!tooltipVisible);\n  };\n  \n  return (\n    <div className=\"assessment-flow\">\n      <h2>{stage} Assessment</h2>\n      \n      <div className=\"progress-bar\">\n        <div className=\"progress-fill\" style={{ width: `${progress}%` }}></div>\n        <span className=\"progress-text\">Question {currentQuestionIndex + 1} of {stageQuestions.length}</span>\n      </div>\n      \n      <div className=\"question-card\">\n        <div className=\"question-header\">\n          <h3>{currentQuestion.text}</h3>\n          <button className=\"info-button\" onClick={toggleTooltip}>i</button>\n        </div>\n        \n        {tooltipVisible && (\n          <div className=\"tooltip\">\n            <p>{currentQuestion.tooltipText}</p>\n            <a href={currentQuestion.githubDocsUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              Learn more in GitHub Docs\n            </a>\n          </div>\n        )}\n        \n        <div className=\"question-category\">Category: {currentQuestion.category}</div>\n        \n        <div className=\"score-buttons\">\n          <button onClick={() => handleResponse(1)}>1 - Not Implemented</button>\n          <button onClick={() => handleResponse(2)}>2 - Basic Implementation</button>\n          <button onClick={() => handleResponse(3)}>3 - Mostly Implemented</button>\n          <button onClick={() => handleResponse(4)}>4 - Fully Implemented</button>\n        </div>\n        \n        <div className=\"navigation-buttons\">\n          <button onClick={handlePrevious}>\n            {currentQuestionIndex === 0 ? 'Back to Stage Selection' : 'Previous Question'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssessmentFlow; ","import React, { useState, useEffect } from 'react';\nimport { StartupStage, Category, calculateCategoryScores, questions } from '../data/questions';\n\n// We'll use React.lazy to load the Chart.js components only when needed\nconst RadarChart = React.lazy(() => import('./RadarChart'));\n\ninterface ResultsDashboardProps {\n  stage: StartupStage;\n  responses: Record<string, number>;\n  onReset: () => void;\n}\n\ninterface RecommendationItem {\n  category: Category;\n  text: string;\n  docsUrl: string;\n  priority: 'high' | 'medium' | 'low';\n}\n\nconst ResultsDashboard: React.FC<ResultsDashboardProps> = ({ stage, responses, onReset }) => {\n  const [categoryScores, setCategoryScores] = useState<Record<Category, number>>({} as Record<Category, number>);\n  const [recommendations, setRecommendations] = useState<RecommendationItem[]>([]);\n  const [isChartLoaded, setIsChartLoaded] = useState(false);\n  \n  // Calculate scores and generate recommendations when component mounts\n  useEffect(() => {\n    const scores = calculateCategoryScores(responses);\n    setCategoryScores(scores);\n    \n    // Generate recommendations based on lowest scoring categories\n    const lowScoreThreshold = 2.5; // Scores below this will generate recommendations\n    const newRecommendations: RecommendationItem[] = [];\n    \n    // Get low-scoring questions\n    const stageQuestionList = questions[stage];\n    stageQuestionList.forEach(question => {\n      const score = responses[question.id] || 0;\n      if (score <= lowScoreThreshold) {\n        newRecommendations.push({\n          category: question.category,\n          text: `Improve: ${question.text}`,\n          docsUrl: question.githubDocsUrl,\n          priority: score <= 1 ? 'high' : score <= 2 ? 'medium' : 'low'\n        });\n      }\n    });\n    \n    // Sort by priority\n    newRecommendations.sort((a, b) => {\n      const priorityOrder = { high: 0, medium: 1, low: 2 };\n      return priorityOrder[a.priority] - priorityOrder[b.priority];\n    });\n    \n    setRecommendations(newRecommendations);\n    \n    // Simulate chart loading (in a real app, this would be handled by React.Suspense)\n    setTimeout(() => setIsChartLoaded(true), 500);\n  }, [stage, responses]);\n  \n  // For the MVP, we'll render a simple placeholder while waiting for Chart.js\n  const renderChartPlaceholder = () => (\n    <div className=\"chart-placeholder\">\n      <p>Loading chart...</p>\n    </div>\n  );\n  \n  return (\n    <div className=\"results-dashboard\">\n      <h2>{stage} Assessment Results</h2>\n      \n      <div className=\"results-summary\">\n        <p>\n          Your assessment is complete! See how your GitHub practices measure up and \n          review your recommendations below.\n        </p>\n      </div>\n      \n      <div className=\"results-chart\">\n        {isChartLoaded ? (\n          <React.Suspense fallback={renderChartPlaceholder()}>\n            <RadarChart categoryScores={categoryScores} />\n          </React.Suspense>\n        ) : (\n          renderChartPlaceholder()\n        )}\n      </div>\n      \n      <div className=\"category-scores\">\n        <h3>Category Scores</h3>\n        <div className=\"score-grid\">\n          {Object.entries(categoryScores).map(([category, score]) => (\n            <div key={category} className=\"score-item\">\n              <div className=\"score-label\">{category}</div>\n              <div className=\"score-value\">{score.toFixed(1)}</div>\n              <div className=\"score-bar\">\n                <div className=\"score-fill\" style={{ width: `${(score / 4) * 100}%` }}></div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      \n      <div className=\"recommendations\">\n        <h3>Recommendations</h3>\n        {recommendations.length === 0 ? (\n          <p>Great job! You've implemented GitHub best practices effectively.</p>\n        ) : (\n          <ul className=\"recommendation-list\">\n            {recommendations.map((rec, index) => (\n              <li key={index} className={`priority-${rec.priority}`}>\n                <div className=\"rec-header\">\n                  <span className=\"rec-category\">{rec.category}</span>\n                  <span className=\"rec-priority\">{rec.priority} priority</span>\n                </div>\n                <div className=\"rec-text\">{rec.text}</div>\n                <a href={rec.docsUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"rec-link\">\n                  GitHub Docs Reference\n                </a>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n      \n      <div className=\"action-buttons\">\n        <button onClick={onReset} className=\"primary-button\">\n          Start Over\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ResultsDashboard; ","import React from 'react';\n\nconst FeedbackForm: React.FC = () => {\n  return (\n    <div className=\"feedback-form\">\n      <h3>Help Us Improve OctoFlow</h3>\n      <p>Your feedback helps us make OctoFlow better for everyone.</p>\n      <div className=\"feedback-buttons\">\n        <a \n          href=\"https://docs.google.com/forms/d/e/1FAIpQLSfXuZD7OR2_X8BQiUHB5UHHFqxY9sQl9Z9H9J9Z9H9J9Z9H9J/viewform\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"feedback-button\"\n        >\n          <span role=\"img\" aria-label=\"pencil\">📝</span> Share Your Feedback\n        </a>\n        <a \n          href=\"https://github.com/cdolik/OctoFlow/issues/new?template=bug_report.md\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"feedback-button\"\n        >\n          <span role=\"img\" aria-label=\"bug\">🐞</span> Report a Bug\n        </a>\n        <a \n          href=\"https://github.com/cdolik/OctoFlow/issues/new?template=feature_request.md\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"feedback-button\"\n        >\n          <span role=\"img\" aria-label=\"light bulb\">💡</span> Request a Feature\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default FeedbackForm; ","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport StageSelector from './components/StageSelector';\nimport AssessmentFlow from './components/AssessmentFlow';\nimport ResultsDashboard from './components/ResultsDashboard';\nimport FeedbackForm from './components/FeedbackForm';\nimport { StartupStage } from './data/questions';\n\nenum AppState {\n  StageSelection,\n  Assessment,\n  Results\n}\n\nfunction App() {\n  const [appState, setAppState] = useState<AppState>(AppState.StageSelection);\n  const [selectedStage, setSelectedStage] = useState<StartupStage | null>(null);\n  const [responses, setResponses] = useState<Record<string, number>>({});\n  \n  // Check if we have any saved state in sessionStorage\n  useEffect(() => {\n    const savedState = sessionStorage.getItem('octoflow-app-state');\n    const savedStage = sessionStorage.getItem('octoflow-selected-stage');\n    const savedResponses = sessionStorage.getItem('octoflow-responses');\n    \n    if (savedState && savedStage) {\n      try {\n        setAppState(parseInt(savedState, 10));\n        setSelectedStage(savedStage as StartupStage);\n        \n        if (savedResponses) {\n          setResponses(JSON.parse(savedResponses));\n        }\n      } catch (e) {\n        console.error('Failed to restore saved state', e);\n      }\n    }\n  }, []);\n  \n  // Save state to sessionStorage when it changes\n  useEffect(() => {\n    if (selectedStage) {\n      sessionStorage.setItem('octoflow-app-state', appState.toString());\n      sessionStorage.setItem('octoflow-selected-stage', selectedStage);\n      \n      if (Object.keys(responses).length > 0) {\n        sessionStorage.setItem('octoflow-responses', JSON.stringify(responses));\n      }\n    }\n  }, [appState, selectedStage, responses]);\n  \n  const handleStageSelect = (stage: StartupStage) => {\n    setSelectedStage(stage);\n    setAppState(AppState.Assessment);\n  };\n  \n  const handleAssessmentComplete = (assessmentResponses: Record<string, number>) => {\n    setResponses(assessmentResponses);\n    setAppState(AppState.Results);\n  };\n  \n  const handleReset = () => {\n    // Clear all session storage\n    sessionStorage.removeItem('octoflow-app-state');\n    sessionStorage.removeItem('octoflow-selected-stage');\n    sessionStorage.removeItem('octoflow-responses');\n    \n    // Reset state\n    setSelectedStage(null);\n    setResponses({});\n    setAppState(AppState.StageSelection);\n  };\n  \n  const handleBack = () => {\n    if (appState === AppState.Assessment) {\n      setAppState(AppState.StageSelection);\n    } else if (appState === AppState.Results) {\n      setAppState(AppState.Assessment);\n    }\n  };\n  \n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>OctoFlow</h1>\n        <p>GitHub Practices Assessment for Startups</p>\n      </header>\n      \n      <main className=\"app-content\">\n        {appState === AppState.StageSelection && (\n          <StageSelector onSelectStage={handleStageSelect} />\n        )}\n        \n        {appState === AppState.Assessment && selectedStage && (\n          <AssessmentFlow \n            stage={selectedStage} \n            onComplete={handleAssessmentComplete} \n            onBack={handleBack}\n          />\n        )}\n        \n        {appState === AppState.Results && selectedStage && (\n          <>\n            <ResultsDashboard \n              stage={selectedStage}\n              responses={responses}\n              onReset={handleReset}\n            />\n            <FeedbackForm />\n          </>\n        )}\n      </main>\n      \n      <footer className=\"app-footer\">\n        <p>OctoFlow - GitHub Practices Assessment Tool © {new Date().getFullYear()}</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}