{"version":3,"sources":["components/RadarChart.tsx"],"names":["ChartJS","register","RadialLinearScale","PointElement","LineElement","Filler","Tooltip","Legend","RadarChart","_ref","categoryScores","chartData","labels","Object","keys","datasets","label","data","values","backgroundColor","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","options","scales","r","min","max","ticks","stepSize","callback","value","toString","pointLabels","font","size","plugins","legend","display","tooltip","callbacks","context","undefined","raw","Number","toFixed","maintainAspectRatio","React","createElement","className","Radar","height"],"mappings":"qGAAA,2CAeAA,IAAQC,SACNC,IACAC,IACAC,IACAC,IACAC,IACAC,KAuEaC,UAhE+BC,IAAyB,IAAxB,eAAEC,GAAgBD,EAE/D,MAGME,EAAY,CAChBC,OAJaC,OAAOC,KAAKJ,GAKzBK,SAAU,CACR,CACEC,MAAO,kBACPC,KAPSJ,OAAOK,OAAOR,GAQvBS,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,EACbC,qBAAsB,wBACtBC,iBAAkB,OAClBC,0BAA2B,OAC3BC,sBAAuB,2BAKvBC,EAAiC,CACrCC,OAAQ,CACNC,EAAG,CACDC,IAAK,EACLC,IAAK,EACLC,MAAO,CACLC,SAAU,EACVC,SAAU,SAASC,GACjB,OAAOA,EAAMC,aAGjBC,YAAa,CACXC,KAAM,CACJC,KAAM,OAKdC,QAAS,CACPC,OAAQ,CACNC,SAAS,GAEXC,QAAS,CACPC,UAAW,CACT3B,MAAO,SAAS4B,GAGd,MAAO,GAFOA,EAAQ5B,OAAS,aACD6B,IAAhBD,EAAQE,IAAoBC,OAAOH,EAAQE,KAAO,GACtCE,QAAQ,aAK1CC,qBAAqB,GAGvB,OACEC,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAACE,IAAK,CAACpC,KAAMN,EAAWe,QAASA,EAAS4B,OAAQ","file":"static/js/4.beba94aa.chunk.js","sourcesContent":["import React from 'react';\nimport { Category } from '../data/questions';\nimport { Radar } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend,\n  ChartOptions\n} from 'chart.js';\n\n// Register Chart.js components\nChartJS.register(\n  RadialLinearScale,\n  PointElement,\n  LineElement,\n  Filler,\n  Tooltip,\n  Legend\n);\n\ninterface RadarChartProps {\n  categoryScores: Record<Category, number>;\n}\n\nconst RadarChart: React.FC<RadarChartProps> = ({ categoryScores }) => {\n  // Prepare data for Chart.js\n  const labels = Object.keys(categoryScores);\n  const scores = Object.values(categoryScores);\n  \n  const chartData = {\n    labels,\n    datasets: [\n      {\n        label: 'Category Scores',\n        data: scores,\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 2,\n        pointBackgroundColor: 'rgba(75, 192, 192, 1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(75, 192, 192, 1)',\n      },\n    ],\n  };\n  \n  const options: ChartOptions<'radar'> = {\n    scales: {\n      r: {\n        min: 0,\n        max: 4,\n        ticks: {\n          stepSize: 1,\n          callback: function(value) {\n            return value.toString();\n          }\n        },\n        pointLabels: {\n          font: {\n            size: 14\n          }\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        display: false\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            const label = context.label || '';\n            const value = context.raw !== undefined ? Number(context.raw) : 0;\n            return `${label}: ${value.toFixed(1)}/4.0`;\n          }\n        }\n      }\n    },\n    maintainAspectRatio: false\n  };\n\n  return (\n    <div className=\"radar-chart\">\n      <Radar data={chartData} options={options} height={350} />\n    </div>\n  );\n};\n\nexport default RadarChart; "],"sourceRoot":""}